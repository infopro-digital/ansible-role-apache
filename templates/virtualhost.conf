{{ ansible_managed | comment }}
<VirtualHost {{ item.ip if 'ip' in item else apache.ip }}:{{ item.port if 'port' in item else apache.port }}>
	ServerAdmin {{ item.server_admin if 'server_admin' in item else apache.server_admin }}
	ServerName {{ item.server_name }}
{% if item.server_aliases is defined %}
{% for alias in item.server_aliases %}
	ServerAlias {{ alias }}
{% endfor %}
{% endif %}
	DocumentRoot {% if item.document_root is defined %}{{ item.document_root }}
{% else %}/var/www/{{ item.name }}
{% endif %}

	ErrorLog "{{ item.log_path | default(apache.log_path) }}/{{ item.name }}_error.log"
	CustomLog "{{ item.log_path | default(apache.log_path) }}/{{ item.name }}_access.log" "{{ item.custom_log_format | default('combined') }}"
{% if (item.rewrite_rules is defined or item.disallowed_paths_regex is defined) and 'rewrite' in apache.modules %}

	RewriteEngine on
{% endif %}

	<Directory {% if item.document_root is defined %}{{ item.document_root }}{% else %}/var/www/{{ item.name }}{% endif %}>
		Options {{ '+' if 'indexes' in item else '-' }}Indexes +FollowSymLinks
{% if item.allowed_hosts is defined %}
{% for host in item.allowed_hosts %}
		Require ip {{ host }}
{% endfor %}
{% else %}
		Require all granted
{% endif %}
		AllowOverride {{ item.allow_override | default('None') }}
		# Custom fragment start
		{{ item.document_root_fragment | default('') }}
		# Custom fragment end
	</Directory>
{% if item.rewrite_rules is defined and 'rewrite' in apache.modules %}

{% for rule in item.rewrite_rules %}
{% if rule.condition %}
	RewriteCond {{ rule.condition }}
{% endif %}
	RewriteRule {{ rule.pattern }} {{ rule.dest }}
{% endfor %}
{% endif %}
{% if item.disallowed_paths_regex is defined %}
{% for path in item.disallowed_paths_regex %}
	RewriteRule {{ path }} - [F,L]
{% endfor %}
{% endif %}
{% if item.disallowed_files is defined %}
{% for file in item.disallowed_files %}
	<Files "{{ file }}">
		Require all denied
	</Files>
{% endfor %}
{% endif %}
{% if item.expire_by_type is defined and 'expires' in apache.modules %}
	ExpiresActive On
{% for (filetype, rule) in item.expire_by_type.iteritems() %}	ExpiresByType {{ filetype }} "{{ rule.rule }}"
{% endfor %}
{% endif %}

{% if item.deflate_by_type is defined and 'deflate' in apache.modules %}
	DeflateCompressionLevel {{ item.deflate_compression_level | default(9) }}
{% for dbt in item.deflate_by_type %}
	AddOutputFilterByType DEFLATE {{ dbt }}
{% endfor %}

{% endif %}
{% if item.proxy_pass is defined and 'proxy' in apache.modules %}
	ProxyPreserveHost {{ 'On' if item.proxy_preserve_host else 'Off' }}
{% for pp in item.proxy_pass %}
	ProxyPass {{ pp.path }} {{ pp.url }}
	<Location {{ pp.path }}>
		ProxyPassReverse {{ pp.url }}
	</Location>
{% endfor %}

{% endif %}
{% if item.jk_mounts is defined %}
{% for mount in item.jk_mounts %}
	{% if mount.mount is defined and not mount.mount %}JkUnMount{% else %}JkMount{% endif %} {{ mount.path }} {{ mount.worker }}
{% endfor %}

{% endif %}
</VirtualHost>
